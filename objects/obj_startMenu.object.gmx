<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_startMenuCursor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MENU_NEW_GAME = 0;
MENU_LOAD_GAME = 1;
MENU_OPTIONS = 2;
MENU_QUIT_GAME = 3;

menuOptions[MENU_NEW_GAME] = "New Game";
menuOptions[MENU_LOAD_GAME] = "Load Game";
menuOptions[MENU_OPTIONS] = "Options";
menuOptions[MENU_QUIT_GAME] = "Quit Game";

spacingPixels = 64;
menuPosition = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
if(keyboard_check_pressed(vk_up)||keyboard_check_pressed(ord("W"))) {
    move = -1;
} else if(keyboard_check_pressed(vk_down)||keyboard_check_pressed(ord("S"))) {
    move = 1;
}

if(move != 0) {
    menuPosition += move;
    if(menuPosition &lt; 0) {
        menuPosition = array_length_1d(menuOptions) - 1;
    } else if(menuPosition &gt; array_length_1d(menuOptions) - 1) {
        menuPosition = 0;
    }
}

if(keyboard_check_pressed(vk_enter)) {
    switch(menuPosition) {
        case MENU_NEW_GAME:
            scr_newGame();
            break;
        case MENU_LOAD_GAME:
            scr_loadGame();
            break;
        case MENU_OPTIONS:
            scr_options();
            break;
        case MENU_QUIT_GAME:
            scr_quitGame();
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt_startMenu);
draw_set_color(c_white);

var menuIndex;
for(menuIndex = 0; menuIndex &lt; array_length_1d(menuOptions); menuIndex++) {
    draw_text(x + spacingPixels, y + (menuIndex * spacingPixels), string(menuOptions[menuIndex]));
}

draw_sprite(sprite_index, 0, x + 16, y + (menuPosition * spacingPixels) - (sprite_height/2));
show_debug_message(string(y + (menuPosition * spacingPixels)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
